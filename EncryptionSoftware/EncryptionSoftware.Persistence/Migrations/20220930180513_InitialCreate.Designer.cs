// <auto-generated />
using System.Collections.Generic;
using EncryptionSoftware.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EncryptionSoftware.Persistence.Migrations
{
    [DbContext(typeof(EncryptionSoftwareContext))]
    [Migration("20220930180513_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EncryptionSoftware.Domain.Productos", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Iva")
                        .HasColumnType("integer");

                    b.Property<List<int>>("ListaDePrecios")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<bool>("ProductoParaLaVenta")
                        .HasColumnType("boolean");

                    b.HasKey("Codigo");

                    b.ToTable("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
